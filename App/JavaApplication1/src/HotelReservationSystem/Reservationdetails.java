/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package HotelReservationSystem;

import com.mysql.cj.protocol.Resultset;
import com.toedter.calendar.JDateChooser;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.html.parser.DTDConstants;

/**
 *
 * @author Chamod
 */
public class Reservationdetails extends javax.swing.JFrame {

    /**
     * Creates new form Roomdetails
     */
    public Reservationdetails() {
        initComponents();
        cmb_roomno.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        datepicker_checkout_date = new com.toedter.calendar.JDateChooser();
        datepicker_checkin_date = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        txt_no_of_adults = new javax.swing.JTextField();
        txt_no_of_child = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbn_reservation = new javax.swing.JTable();
        btn_delete = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_req = new javax.swing.JTextArea();
        cmb_roomno = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Check In Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        jLabel4.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Check Out Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabel5.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Number Of Adults");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, -1, -1));

        jLabel6.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Number Of Children");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));
        getContentPane().add(datepicker_checkout_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 270, 230, -1));
        getContentPane().add(datepicker_checkin_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 230, -1));

        jLabel10.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Special Requests");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));
        getContentPane().add(txt_no_of_adults, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 310, 230, -1));
        getContentPane().add(txt_no_of_child, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 230, -1));

        btn_update.setBackground(new java.awt.Color(246, 230, 134));
        btn_update.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 570, 160, 40));

        tbn_reservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No", "Check In Date", "Check out date", "No of adults", "No of child", "Rsequest"
            }
        ));
        tbn_reservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbn_reservationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbn_reservation);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, 600, 360));

        btn_delete.setBackground(new java.awt.Color(246, 230, 134));
        btn_delete.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 570, 160, 40));

        btn_back.setBackground(new java.awt.Color(255, 255, 255));
        btn_back.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        getContentPane().add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 570, 160, 40));

        txt_req.setColumns(20);
        txt_req.setRows(5);
        jScrollPane2.setViewportView(txt_req);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 230, 150));

        getContentPane().add(cmb_roomno, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 230, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/room reservation details.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 650));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed

        try {
            String checkInDate, checkOutDate, requests, roomid, adult, child;
            int no_adult, no_child;

            requests = txt_req.getText();
            roomid = cmb_roomno.getSelectedItem().toString();

            adult = txt_no_of_adults.getText();
            child = txt_no_of_child.getText();

            SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
            checkInDate = sfd.format(datepicker_checkin_date.getDate());
            checkOutDate = sfd.format(datepicker_checkout_date.getDate());

            no_adult = Integer.parseInt(txt_no_of_adults.getText());
            no_child = Integer.parseInt(txt_no_of_child.getText());

            if (roomid == null) {
                JOptionPane.showMessageDialog(null, "select reservation ", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    Statement st = HotelReservationSystem.DBConnection.creatConnection().createStatement();
                    String query = "UPDATE `room_reservation` SET `roomID` = '" + roomid + "',`check_in_date` = '" + checkInDate + "', `check_out_date` = '" + checkOutDate + "', `number_of_adults` = '" + no_adult + "', `number_of_children` = '" + no_child + "', `special_requests` = '" + requests + "' WHERE `room_reservation`.`reservation_id` = '" + reservID + "';";
                    int count = st.executeUpdate(query);
                    System.out.println(query);
                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Reservation update successfull.", "Success", JOptionPane.INFORMATION_MESSAGE);
                        setData();
                        clear();

                    }

                    tbn_reservation.clearSelection();

                } catch (NullPointerException e) {
                    JOptionPane.showMessageDialog(null, "Something went wrong ", "Error", JOptionPane.ERROR_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Something went wrong ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed


    private void tbn_reservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbn_reservationMouseClicked
        int selectedRow = tbn_reservation.getSelectedRow();
        TableModel model = tbn_reservation.getModel();

        txt_no_of_adults.setText(model.getValueAt(selectedRow, 3).toString());
        txt_no_of_child.setText(model.getValueAt(selectedRow, 4).toString());
        txt_req.setText(model.getValueAt(selectedRow, 5).toString());

        String roomid = model.getValueAt(selectedRow, 0).toString();
        // String checkin = model.getValueAt(selectedRow, 1).toString();
        // String checkout = model.getValueAt(selectedRow, 2).toString();

        cmb_roomno.addItem(roomid);
        SimpleDateFormat sfd = new SimpleDateFormat("yyyy-MM-dd");
        String checkindate = (String) model.getValueAt(selectedRow, 1);
        String checkoutdate = (String) model.getValueAt(selectedRow, 2);

        try {
            Date checkin = sfd.parse(checkindate);
            Date checkout = sfd.parse(checkoutdate);

            datepicker_checkin_date.setDate(checkin);
            datepicker_checkout_date.setDate(checkout);
        } catch (ParseException e) {
            // Handle the parsing exception, e.g., by displaying an error message.
            e.printStackTrace();
        }


    }//GEN-LAST:event_tbn_reservationMouseClicked

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        try {
            Statement st = HotelReservationSystem.DBConnection.creatConnection().createStatement();
            String query = "DELETE FROM `room_reservation` WHERE `room_reservation`.`reservation_id` = '" + reservID + "';";
            int count = st.executeUpdate(query);
            //System.out.println(query);
            if (count > 0) {
                JOptionPane.showMessageDialog(null, "Reservation delete successfull.", "Success", JOptionPane.INFORMATION_MESSAGE);
                setData();
                clear();

            }

            tbn_reservation.clearSelection();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    public void clear() {
        txt_no_of_adults.setText(null);
        txt_no_of_child.setText(null);
        txt_req.setText(null);

        datepicker_checkin_date.setDate(null);
        datepicker_checkout_date.setDate(null);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservationdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservationdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservationdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservationdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservationdetails().setVisible(true);
            }
        });
    }
    String userId;
    String reservID;

    public void setUserID(String id) {
        this.userId = id;

    }

    public void setData() {
        DBConnection obj = new DBConnection();
        ResultSet rst = obj.getReservationData(userId);
        tbn_reservation.removeAll();
        tbn_reservation.repaint();

        DefaultTableModel s = (DefaultTableModel) tbn_reservation.getModel();
        s.setNumRows(0);

        try {
            while (rst.next()) {

                String reservationId = rst.getString("reservation_id");
                String roomno = rst.getString("roomID");
                String checkin = rst.getString("check_in_date");;
                String checkout = rst.getString("check_out_date");
                String adults = rst.getString("number_of_adults");
                String childs = rst.getString("number_of_children");
                String req = rst.getString("special_requests");

                String data[] = {roomno, checkin, checkout, adults, childs, req};

                s.addRow(data);

                this.reservID = reservationId;

            }
        } catch (SQLException ex) {
            Logger.getLogger(Reservationdetails.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cmb_roomno;
    private com.toedter.calendar.JDateChooser datepicker_checkin_date;
    private com.toedter.calendar.JDateChooser datepicker_checkout_date;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbn_reservation;
    private javax.swing.JTextField txt_no_of_adults;
    private javax.swing.JTextField txt_no_of_child;
    private javax.swing.JTextArea txt_req;
    // End of variables declaration//GEN-END:variables
}
